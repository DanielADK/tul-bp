@startuml
package "Stávající systém" <<Frame>> {
    abstract class User {
        -userId: int
        -name: string
        -email: string
    }

    class Employee extends User {
        -degreePre: string
        -degreePost: string
    }

    class Student extends User {
        -guardianId: int
    }
}

' Definice rozhraní a tříd
interface NotifierInterface {
    +sendNotification(notification: Notification): void
}

class Notification {
    -message: string
    -type: NotificationType
    -importance: NotificationImportance
    -seen: boolean
}

enum NotificationType {
    EMAIL
    SYSTEM
}

enum NotificationImportance {
    INFO
    WARNING
    URGENT
}

'Singleton Pattern pro NotificationManager
class NotificationManager <<Singleton>> {
    -static instance: NotificationManager
    -notifiers: List<NotifierInterface>
    
    -NotificationManager()
    +static getInstance(): NotificationManager
    +registerNotifier(notifier: NotifierInterface): void
    +sendNotification(notification: Notification): void
}

' Implementace NotifierInterface
class SystemNotifier implements NotifierInterface {
    +sendNotification(notification: Notification): void
}

class EmailNotifier implements NotifierInterface {
    +sendNotification(notification: Notification): void
}

' Vztahy
NotificationManager ..> "*" NotifierInterface : manages >
NotifierInterface .left.> Notification : uses >
Notification -right-> User : "targets >"
NotificationType ..> Notification : uses >
NotificationImportance ..> Notification : uses >

' Singleton vztah
NotificationManager -[hidden]-> NotificationManager : <<singleton>>

@enduml